#!/usr/bin/perl
use strict;
use warnings;
use Cwd qw(abs_path);

#######################################################################
# 'by_score' takes an assembled simulation as formatted by crosstab and stratifies
# the input features by the original BED score field (field 5). A correlation plot
# of these strata to the appended score (field 7) for the actual input features
# (iteration = -1) is constructed and Pearson and Spearman coefficients calculated.
# The 'aggregate' command is then applied to each stratum and box plots made to
# assess the correlation of simulation score enrichment with the original score.
# Unmodified input lines are repeated to STDOUT for analysis streaming.
#----------------------------------------------------------------------
# Options inherited from 'aggregate':
#     IMAGE_PREFIX     path prefix of the image files that will be created
#                      suffixed with ".by_score.jpg/pdf", ".by_score.by_iteration.jpg/pdf" and ".by_score.by_feature.jpg/pdf"
#                      REQUIRED
#     SIM_LABEL        label for the simulation score type
#                      OPTIONAL [default: 'Simulation score']
#     SUPPRESS_NULL    boolean instructing to ignore input features with simulation score of 'NULL'
#                      OPTIONAL [default: FALSE, 'NULL' scores are interpreted as 0]
#     SIM_LOG          boolean indicating to take the log10 of simulation scores before analysis
#                      OPTIONAL [default: FALSE]
#     AGGREGATE_TYPE   how to aggregate the feature simulation scores within each iteration
#                      allowed values are enumerated below
#                      OPTIONAL [default: MEDIAN]
#     N_BINS           number of bins in the simulation score histograms
#                      used to calculate Gaussian p-values as seen in plots generated by 'aggregate'
#                      does NOT determine the number of score strata (see STRATUM_SIZE)
#                      OPTIONAL [default: 50]
#----------------------------------------------------------------------
# Options for 'by_score':
#     BED_LABEL        label for the original BED feature score (field 5)
#                      OPTIONAL [default: 'BED score']
#     BED_LOG          boolean indicating to take the log10 of BED feature scores before analysis
#                      OPTIONAL [default: FALSE]
#     STRATUM_SIZE     factor used to stratify (logged) BED feature scores prior to simulation score aggregation
#                      stratum = round(BED_score/STRATUM_SIZE)*STRATUM_SIZE
#                      OPTIONAL [default: 1, i.e. rounded to integer values]
#     MIN_BED          smallest plotted value of the (logged and rounded) BED feature score
#                      features below MIN_BED are plotted and aggregated at MIN_BED
#                      OPTIONAL [default: lowest value in data]
#     MAX_BED          largest plotted value of the (logged and rounded) BED feature score
#                      features above MAX_BED are plotted and aggregated at MAX_BED
#                      OPTIONAL [default: largest value in data]
#     MIN_SIM          smallest plotted value of the (logged) simulation score
#                      features below MIN_SIM are plotted at MIN_SIM
#                      OPTIONAL [default: lowest value in data]
#     MAX_SIM          largest plotted value of the (logged) simulation score
#                      features above MAX_SIM are plotted at MAX_SIM
#                      OPTIONAL [default: largest value in data]
#     PEARSON          boolean indicating to report the Pearson correlation coefficient
#                      OPTIONAL [default: FALSE, Spearman coefficient is reported]
#     ADD_STRATA       semicolon-delimited list of operations specifying BED feature score strata to add
#                      each operation is a comma-delimited list in format: label,operator,comparator1[,comparator2]
#                      operation is applied to logged BED feature scores
#                      operator 'between' is semi-inclusive and means >=comparator1 & <comparator2
#                      precede a stratum label with '!' to suppress the line normally drawn from the previous stratum
#                      example: all,>=,0;!neg,<,1;weak,between,1,3;mod,between,3,10;high,>=,10
#                      OPTIONAL [default: only the fixed-width score strata are included]
#     COMPARE_STRATA   semicolon-delimited list of strata pairs between which to calculate paired p-values
#                      each pair is a comma-delimited list of labels specified by ADD_STRATA
#                      e.g. all,neg;all,high;neg,high
#                      OPTIONAL [default: no pairwise group comparison are made]
#     COMPARE_TEST     the statistical test used to peform pairwise comparisons
#                      't.test' is appropriate for normally distributed simulation scores
#                      'wilcox.test' is appropriate for rankable non-parametric simulation scores
#                      'fisher.test' is appropriate for boolean (0/1) simulation scores
#                      OPTIONAL [default: wilcox.test]    
#     SUPPRESS_FIXED   boolean indicating not to plot the fixed-width strata determined by STRATUM_SIZE
#                      if TRUE, only strata determined by ADD_STRATA are plotted
#                      OPTIONAL [default: FALSE, both fixed-width and user-defined strata are plotted]
#     PERCENTILE       boolean indicating that BED feature scores should be percentiled prior to use
#                      STRATUM_SIZE, MIN_BED, MAX_BED and ADD_STRATA are then interpreted as percentiles
#                      BED_LOG no longer applies and is set to FALSE
#                      e.g. PERCENTILE TRUE and STRATUM_SIZE 5 yields 20 strata each with 5% of the features
#                      OPTIONAL [default: FALSE]
#     STRATIN          the width of one stratum on the plot's x-axis, in inches
#                      OPTIONAL [default: 0.25]
#----------------------------------------------------------------------
# Aggregate types are:
#     AVERAGE         the average of all simulation scores
#     WEIGHTED        the average of all simulation scores weighted by feature length
#     WEIGHTED5       the average of all simulation scores weighted by feature BED score (field 5)
#     SUM             the sum of all simulation scores
#     COUNT           the number of boolean-positive simulation scores
#     MEDIAN          the median of all scores
#     MIN             the minimum simulation score value
#     MAX             the maximum simulation score value
#----------------------------------------------------------------------
# Options may be provided as environment variables or on the command line in format:
#     <value_option>=<value> <boolean_option>
# with no spaces, for example:
#     bedutil by_score AGGREGATE_TYPE=AVERAGE SUPPRESS_NULL > /dev/null
#######################################################################


#######################################################################
# detect and check options
#----------------------------------------------------------------------
my $scriptFile = abs_path($0);
my ($scriptDir, $scriptName) = $scriptFile =~ m|(.+)/(.+)|;
require "$scriptDir/common.pl";
showHelp($scriptFile, 95, 89);
#----------------------------------------------------------------------
use vars qw(%validOptions %booleanOptions %defaultValues @requiredOptions);
%validOptions = map { $_ => 1} qw (
    IMAGE_PREFIX
    SIM_LABEL
    SUPPRESS_NULL
    SIM_LOG
    AGGREGATE_TYPE
    N_BINS
    BED_LABEL
    BED_LOG
    STRATUM_SIZE
    MIN_BED
    MAX_BED
    MIN_SIM
    MAX_SIM
    PEARSON
    ADD_STRATA
    COMPARE_STRATA
    COMPARE_TEST
    SUPPRESS_FIXED
    PERCENTILE
    STRATIN
);
%booleanOptions = map { $_ => 1} qw (
    SUPPRESS_NULL
    SIM_LOG
    BED_LOG
    PEARSON
    SUPPRESS_FIXED
    PERCENTILE
);
%defaultValues = (
    SIM_LABEL => "Simulation score",
    AGGREGATE_TYPE => "MEDIAN",
    N_BINS => 50,
    BED_LABEL => "BED score",
    STRATUM_SIZE => 1,
    MIN_BED => "",
    MAX_BED => "",
    MIN_SIM => "",
    MAX_SIM => "",
    ADD_STRATA => "",
    COMPARE_STRATA => "",
    COMPARE_TEST => "wilcox.test",
    STRATIN => 0.25
);
@requiredOptions = qw (
    IMAGE_PREFIX
);
my ($error, $feedback) = parseOptions($scriptName, $scriptDir);
#######################################################################


#######################################################################
# assemble and execute the stream
#----------------------------------------------------------------------
print STDERR "bedutil by_score\n";
my $stream = "Rscript $scriptDir/by_score.R";
open my $outH, "|-", $stream or die "by_score.pl: could not open stream for writing: $!";
while(my $line = <STDIN>){
    print $outH $line;
    $line =~ m/Execution halted/ and die "bedutil by_score error\n";  # capture R errors
}
close $outH;
#######################################################################

1;

